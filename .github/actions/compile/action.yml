name: 'Compile libfibre'
description: 'Compiles libfibre for the specified target'
inputs:
  target:
    description: |
      The build target on which the compiled libfibre is supposed to run.
      Supported values are:
        - local (the runner must be ubuntu-latest)
    required: true
    default: local
runs:
  using: "composite"
  steps:
    - name: Install Prerequisites
      shell: bash
      run: |
        UNAME=$(uname)

        if [ "$UNAME" == "Linux" ]; then
          echo "installing tup..."
          if ! (apt-cache search tup | grep "^tup - "); then
            sudo add-apt-repository ppa:jonathonf/tup
            sudo apt-get update
          fi
          sudo apt-get install tup

          echo "installing interface_generator dependencies..."
          sudo apt install python3 python3-yaml python3-jinja2 python3-jsonschema

          echo "installing fibre-cpp build dependencies..."
          sudo apt-get install libusb-1.0-0-dev

        elif [ "$UNAME" == "Darwin" ]; then
          echo "installing tup..."
          brew cask install osxfuse && brew install tup

          echo "installing interface_generator dependencies..."
          pip3 install PyYAML Jinja2 jsonschema

          echo "installing fibre-cpp build dependencies..."
          # libusb already installed
          #brew install libusb
          pkg-config libusb-1.0 --cflags

        elif [ "$UNAME" == "CYGWIN*" ] || [ "$UNAME" == "MINGW*" ] ; then
          # # TODO: fix this
          # echo "installing tup..."
          # Invoke-WebRequest -Uri "http://gittup.org/tup/win32/tup-latest.zip" -OutFile ".\tup-latest.zip"
          # Expand-Archive ".\tup-latest.zip" -DestinationPath ".\tup-latest" -Force
          # echo "$(Resolve-Path .)\tup-latest" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

          # echo "installing interface_generator dependencies..."
          # pip install PyYAML Jinja2 jsonschema

          # echo "installing fibre-cpp build dependencies..."
          # Invoke-WebRequest -Uri "https://github.com/libusb/libusb/releases/download/v1.0.23/libusb-1.0.23.7z" -OutFile ".\libusb-1.0.23.7z"
          # & "$env:ProgramFiles\7-Zip\7z.exe" x -o".\libusb-1.0.23" ".\libusb-1.0.23.7z" -r ;
          # #Expand-Archive ".\libusb-1.0.23.7z" -DestinationPath ".\libusb-1.0.23" -Force
          # dir
          # echo 'CONFIG_LDFLAGS="./libusb-1.0.23/MinGW64/static/libusb-1.0.a"' | Out-File -FilePath "tup.config" -Encoding utf8 -Append
          echo "not implemented"
          return 1

        else
          echo "Unknown operating system: $UNAME"
          return 1
        fi

    - name: Compile
      shell: bash
      run: |
        tup init
        tup generate ./tup_build.sh
        ./tup_build.sh

#    # This is required to make the action repeatable
#    - name: Clean up
#      shell: bash
#      run: git clean -dffx
